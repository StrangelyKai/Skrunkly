// OK LETS GOOOOO envelopes are gonna be HUGE

d; {"\f[italic,false]\f[bold,false]"}
i; {"\f[italic,true]"}
b; {"\f[bold,true]"}

b_round; {"\b[0]"}
b_roundsq; {"\b[8]"}
b_fluff; {"\b[16]"}
b_fluffsq; {"\b[24]"}
b_spike; {"\b[32]"}
b_spikesq; {"\b[40]"}
b_whisp; {"\b[48]"}
b_whispsq; {"\b[56]"}
b_think; {"\b[64]"}
b_thinksq; {"\b[72]"}
b_square; {"\b[80]"}
b_lines; {"\b[88]"}
b_spook; {"\b[96]"}

b_random; {"%(b_round)";"%(b_roundsq)";"%(b_fluff)";"%(b_fluffsq)";"%(b_spike)";"%(b_spikesq)";"%(b_whisp)";"%(b_whispsq)";"%(b_think)";"%(b_thinksq)";"%(b_square)";"%(b_lines)";"%(b_spook)"}

hihello : nonoverlap
{
	"hi"
	"hello"
	"what's up"
	"wassup"
	"ello"
	"sup"
	"good day"
	"g'day"
}

funnyname : nonoverlap
{
	"fart monster"
	"hungry hungry hippos"
	"goofball"
	"bartholomew"
	"silly little guy"
	"sans undertale"
	"pity party haver"
	"my favourite loser"
	"you hot topic wannabe"
	"you blue gumball son of a bitch"
}

oa
{
	"O"
	"A"
	"o"
	"a"
}

oas : all
{
for _i = 1; _i < (RAND(100) + 1) ; _i++
{
     "%(oa)"
}
}

woah
{
	"W"
	"w"
	--
    "%(oas)"
	--
	"H"
	"h"
}

fuck
{
	"F"
	"f"
	--
	"%(u)"
	--
	"C"
	"c"
	--
	"K"
	"k"
}

Uu
{
	"U"
	"u"
}

u : all
{
for _i = 1; _i < (RAND(100) + 1) ; _i++
{
     "%(Uu)"
}
}

haha : all
{
for _i = 1; _i < (RAND(100) + 1) ; _i++
{
     "%(ha)"
}	
}

ha
{
	"h"
	"H"
	"a"
	"A"
}

wob : all
{
for _i = 1; _i < (RAND(100) + 1) ; _i++
{
     "wob"
}
}

murr
{
	"mur%(r)"
}

r : all
{
	for _i = 1; _i < (RAND(100) + 1) ; _i++
	{
		"r"
	}
}

emotion : nonoverlap
{
	"happy"
	"sad"
	"fear"
	"tired"
	"bored"
	"like im gonna die"
	"like im gonna suddenly start screaming"
	"like a microwave"
	"like a calm but meloncholy grey cloud on a rainy day"
	"like a child watching the droplets of rain race down the car window"
	"like everyone around me is crying at a funeral but i dont know why i should be crying"
	"nothing"
	"like theres a cold wind blowing straight through me,\w8 as if i dont even exist"
}

goodbad : nonoverlap
{
	"ok"
	"good"
	"well"
	"pleasantly"
	"fine"
	"excellent"
	"favourably"
	"acceptably"
	"wonderfully"
	"exceptionally"
	
	"bad"
	"terrible"
	"atrociously"
	"awfully"
	"shit"
	"unacceptably"
	"poorly"
	"crappy"
}

a : all
{
for _i = 1; _i < (RAND(100) + 1) ; _i++
{
     "%(Aa)"
}
}

Aa
{
	"A"
	"a"
}
aan
{
	_item = _argv[0]
	_first = SUBSTR(_item,0,1)
	_first = TOLOWER(_first)
	
	if _first == "a" || _first == "e" || _first == "i" || _first == "o" || _first == "u"
	{
		"an"
	}
	else
	{
		"a"
	}
}

item : nonoverlap
{
	"egg"
	"powerful spell book"
	"fruit bowl filled with keys"
	"comically oversized keyring"
	"ham sandwich cut into 4 triangles"
	"dead battery"
	"fart"
	"small skrunkly plushie"
	"pat on the head"
	"youtuber that has been shrunk and put into a jar"
	"sand seal"
	"shiny rock"
	"turtle shell"
	"stray piece of hair"
	"bucket of paint"
	"bottle of hairspray"
	"box of hairdye"
	"expired coupon"
	"billboard with a toothpaste ad on it"
	"demon"
	"butterfly wings"
	"fairy wings"
	"statue of me"
	"palm tree with a heart carved into it"
	"giant mushroom tree"
	"piece of scrap fabric"
	"broken wooden bridge"
	"apple with a worm sized hole in it"
	"pineapple carved to look like a jack-o-lantern"
	"empty glass jar"
	"world wide web website"
	"empty pokeball"
	"bubble bath filled with rubber ducks"
	"water bottle with a small red jacket on it"
	"freezer drawer filled with snow"
	"pair of broken 3d glasses"
	"balloon filled with confetti"
	"blanket with a suspicious yellow stain"
	"mauled box of chocolates"
	"witch's cauldren with the remainders of an unknown substance left in it"
	"broken arcade machine"
	"glass jar filled with fairy lights"
	"deadly snail"
	"miniture model of a coral reef"
	"stolen box of girl scout cookies"
	"muddy watercolour palette"
	"scrapbook full of dried leaves"
	"small but useful knife"
	"chimkin nuggie"
	"sweet old lady"
	"tube of glitter glue"
	"bottle of expired nail polish"
	"giant button from a winter coat"
	"chocolate chip cookie with the chocolate chips taken out"
	"plastic bag of edible bugs"
	"cork from a wine bottle"
	"suspicious skeletal hand"
	"copy of shrek 2 the game for the original xbox"
	"innocuous laughter"
	"sticky note with a drawing of deadpool on it"
	"binder full of 9th grade science notes"
	"hacked 3ds but the only game you can play is 'barbie: groom and glam pups'"
	"empty cd case with your mother's father's mother's maiden name engraved into the plastic"
	"friendly dancing sunflower"
	"trashcan filled with snotty tissues"
	"haunted raccoon"
	"bottle of glue"
	"a man with pancake-hands"
}

itemss : nonoverlap
{
	"eggs"
	"powerful spell books"
	"fruit bowls filled with keys"
	"comically oversized keyrings"
	"ham sandwiches cut into 4 triangles"
	"dead batteries"
	"farts"
	"small skrunkly plushies"
	"pats on the head"
	"youtubers that have been shrunk and put into a jar"
	"sand seals"
	"shiny rocks"
	"turtle shells"
	"stray pieces of hair"
	"buckets of paint"
	"bottles of hairspray"
	"boxes of hairdye"
	"expired coupons"
	"billboards with toothpaste ads on it"
	"demons"
	"butterfly wings"
	"fairy wings"
	"statues of me"
	"palm trees with hearts carved into them"
	"giant mushroom trees"
	"pieces of scrap fabric"
	"broken wooden bridges"
	"apples with worm sized holes in it"
	"pineapples carved to look like jack-o-lanterns"
	"empty glass jars"
	"world wide web websites"
	"empty pokeballs"
	"bubble baths filled with rubber ducks"
	"water bottles with a small red jacket on it"
	"freezer drawers filled with snow"
	"pairs of broken 3d glasses"
	"balloons filled with confetti"
	"blankets with suspicious yellow stains"
	"mauled boxes of chocolates"
	"witch's cauldrens with the remainders of an unknown substance left in them"
	"broken arcade machines"
	"glass jars filled with fairy lights"
	"deadly snails"
	"miniture models of coral reefs"
	"stolen boxes of girl scout cookies"
	"muddy watercolour palettes"
	"scrapbooks full of dried leaves"
	"small but useful knives"
	"chimkin nuggies"
	"sweet old ladies"
	"tubes of glitter glue"
	"bottles of expired nail polish"
	"giant buttons from winter coats"
	"chocolate chip cookies with the chocolate chips taken out"
	"plastic bags of edible bugs"
	"corks from wine bottles"
	"suspicious skeletal hands"
	"copies of shrek 2 the game for the original xbox"
	"innocuous laughters"
	"sticky notes with a drawing of deadpool on it"
	"binders full of 9th grade science notes"
	"empty cd cases with your mother's father's mother's maiden name engraved into the plastic"
	"friendly dancing sunflowers"
	"trashcans filled with snotty tissues"
	"haunted raccoons"
	"bottles of glue"
	"man with pancake-hands"
}

emoticon : nonoverlap
{
	":)"
	":("
	":D"
	"D:"
	":P"
	"XP"
	"XD"
	"Xd"
	":3"
	">:)"
	">:("
	">:3"
	":T"
	":O"
	":o"
	">:O"
	">:o"
	"=)"
	"=D"
	"=P"
	";("
	":-)"
	":-D"
	">:["
	"=O"
	"=o"
	"x3"
	"X3"
	":/"
	"=/"
	":|"
	"=|"
	"B)"
	":>"
	"=>"
	"^^"
	"^-^"
	"^_^"
	"o-o"
	"O_O"
	"o_O"
	"x_x"
	">.<"
	">-<"
	">_<"
	"(-_-;)"
	"(>w<)"
	"-~-"
	"o~o"
	";-;"
	"owo"
	"OwO"
	"uwu"
	"UwU"
	".-."
	"._."
	".w."
	"-w-"
	">:3c"
	":3c"
	"~-~"
	"oAo"
	"OAO"
	"TWT"
	"TwT"
	"qwq"
	"QWQ"
	"QwQ"
}

kaomoji : nonoverlap
{
	"\f[height,14]"
	--
	_moji = _argv[0]
	
    _happy = ("☆:.｡.o(≧▽≦)o.｡.:☆","(´ ∀ ` *)","(〃＾▽＾〃)","\(★ω★)/","(ﾉ◕ヮ◕)ﾉ*:･ﾟ✧","(ﾉ´ヮ`)ﾉ*: ･ﾟ","(„• ֊ •„)","(⁀ᗢ⁀)","｡+ﾟ.。+。(´ω｀*)♪♪","(´▽`)","(〜￣▽￣)〜","_(:3 」∠)_","°˖✧◝(⁰▿⁰)◜✧˖°","٩(ˊᗜˋ*)و ♡","°ʚ(*´꒳`*)ɞ°","(⌒ω⌒)","(｡◝‿◜｡)","(((o(*ﾟ▽ﾟ*)o)))","(*´∀｀*)","☆〜（ゝ。∂）","(((o(>w<)o)))","(つ◕◕)つ","(づ๑•ᴗ•๑)づ♡","৻( •̀ ᗜ •́ ৻)","(((o(*ﾟ▽ﾟ*)o)))")
    _sad = ("(｡╯︵╰｡)","(╥_╥)","｡ﾟヽ(ﾟ´Д｀)ﾉﾟ｡","。：゜(；´∩｀；)゜：。","(-ω-、)","｡･ﾟﾟ*(>д<)*ﾟﾟ･｡")
    _angry = ("(＃`Д´)","ヽ( `д´*)ノ","凸( ` ﾛ ´ )凸","Q(`⌒´Q)","(˶˃⤙˂˶)")
	_cat = ("(=^･ω･^=)","(=`ω´=)","(=^-ω-^=)","(=^..^=)","≽^- ˕ -^≼","/ᐠ - ˕ -マ","ᓚᘏᗢ")
	_sleepy = ("(_ _ )..zZ","(⸝⸝ᴗ﹏ᴗ⸝⸝) ᶻ 𝗓 𐰁","/ᐠ - ˕-マ｡˚ᶻ 𝗓 ")
	_bunny = ("૮꒰˶  - ˕ -꒱ა","꒰ᐢ. .ᐢ꒱","૮₍ ´ ꒳ `₎ა","₊ ⊹₍ᐢᐢ₎","૮ ˶ᵔ ᵕ ᵔ˶ ა","₍ᐢ. ༝ .ᐢ₎","(づ˶•༝•˶)づ♡","૮(˶˃ᆺ˂˶)ა","૮₍ ´• ˕ •` ₎ა","₍ᐢ. ̫.ᐢ₎","૮ ˶ᵔ ᵕ ᵔ˶ ა","૮꒰ྀི∩´ ᵕ `∩꒱ྀིა","૮₍_   ̫ _ ₎ა ♡","૮₍ ´ ꒳ `₎ა")

    if _moji == "happy"; ANY(_happy)
    elseif _moji == "sad"; ANY(_sad)
    elseif _moji == "angry"; ANY(_angry)
	elseif _moji == "cat"; ANY(_cat)
	elseif _moji == "sleepy"; ANY(_sleepy)
	elseif _moji == "bunny"; ANY(_bunny)
    else; ANY(_happy,_sad,_angry,_cat,_sleepy,_bunny)
}

//this turned into ascii and also kaomoji that are multiple lines, just to keep the regular ones neater
asciiart
{
	_ascii = _argv[0]
	
	_cat = ("\b[2]%(b)\f[height,3]⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀        \n⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀       \n⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀      \n⠀⠀⠀⠀⠀⣾⣿⣿⣿⣿⣿⣿⣿⡀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀    \n ⠀⠀⠀ ⢸⣿⣿⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀   \n⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣠⣤⣤⣼⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀  \n⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀  \n⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀  \n⠀⠀⠀⠘⣿⣿⣿⣿⠟⠁⠀⠀⠀⠹⣿⣿⣿⣿⣿⠟⠁⠀⠀⠹⣿⣿⡿⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⣿⣿⣿⡇⠀⠀⠀⢼⣿⠀⢿⣿⣿⣿⣿⠀⣾⣷⠀⠀⢿⣿⣷⠀⠀⠀⠀⠀    \n⠀⠀⠀⢠⣿⣿⣿⣷⡀⠀⠀⠈⠋⢀⣿⣿⣿⣿⣿⡀⠙⠋⠀⢀⣾⣿⣿⠀⠀⠀⠀⠀  \n⢀⣀⣀⣀⣿⣿⣿⣿⣿⣶⣶⣶⣶⣿⣿⣿⣿⣾⣿⣷⣦⣤⣴⣿⣿⣿⣿⣤⠤⢤⣤⡄\n⠈⠉⠉⢉⣙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⣀⣀⣀⡀⠀\n⠐⠚⠋⠉⢀⣬⡿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣥⣀⡀⠈⠀⠈⠛\n⠀⠀⠴⠚⠉⠀⠀⠀⠉⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠛⠋⠁⠀⠀⠀⠉⠛⠢⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀","%(b)     ☆ *　. 　☆\n　　 . ＿∧　∩　* ☆\n* ☆ ( ・∀・)/ .\n　. ⊂　　 ノ* ☆\n☆ * (つ ノ .☆\n　　 (ノ","%(b)∧,,,∧  \n(„. .„)\n🍓⊂ )","%(b)\f[height,8]⣴⡿⠶⠀⠀⠀⣦⣀⣴⠀⠀⠀⠀\n⣿⡄⠀⠀⣠⣾⠛⣿⠛⣷⠀⠿⣦\n⠙⣷⣦⣾⣿⣿⣿⣿⣿⠟⠀⣴⣿\n⠀⣸⣿⣿⣿⣿⣿⣿⣿⣾⠿⠋⠁\n⠀⣿⣿⣿⠿⡿⣿⣿⡿⠀⠀⠀⠀\n⢸⣿⡋⠀⠀⠀⢹⣿⡇⠀⠀⠀⠀\n⣿⡟⠀⠀⠀⠀⠀⢿⡇⠀⠀⠀⠀\n⠉⠁⠀⠀⠀⠀⠀⠸⠇⠀⠀⠀⠀","%(b) ╱|、\n(•˕ •  7\n |、⁻〵ノ)\n じしˍ,)ノ")
	_skrunkly = ("\f[height,4]⠀⠀⠀⠀⠀⠀⠀⠀⡟⠛⠵⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⣫⠀⠀⠀⠈⠉⠑⠦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣠⡤⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⣛⡇⠀⠀⣠⠶⠯⠛⠛⠓⠒⠦⢤⣠⣰⡾⠟⠛⠉⠁⠀⣼⠃⠀⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⢹⡇⣴⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠳⣄⠀⠀⠀⠀⣼⠁⠀⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⠏⠀⠀⠀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⡂⠀⢀⣾⠁⠀⠀⠀\n⠀⠀⠀⠀⠀⣠⠶⠛⢹⡏⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⣤⠀⠀⠀⢸⡇⠀⣼⠃⠀⠀⠀⠀\n⠀⠀⣠⡴⠛⠁⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⣤⣶⣤⣄⠀⠀⠉⠀⠀⠀⠀⣿⢰⠏⠀⠀⠀⠀⠀\n⠀⠀⠉⠉⠉⣻⡇⠀⠀⣿⡀⠀⠀⠀⠀⠀⠙⠛⠿⠟⠀⠀⠀⠀⠀⠀⠀⣿⣏⡀⠀⠀⠀⠀⠀\n⠀⠀⠀⠀⣤⠟⠁⠀⠀⠀⠻⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣾⠇⠀⠉⠳⣄⡀⠀⠀\n⠀⠀⠀⠛⠿⠿⠿⠭⠭⠶⠦⠬⠹⠷⣦⣤⣤⣤⣤⣤⣤⣴⣺⠽⠋⠀⠠⣤⢤⣉⣷⡄⠀⠀\n⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠉⠉⠉⠈⠛⠻⣶⣦⣄⡘⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⠋⠀⠀")
	_bunny = ("%(b)\f[height,15] /)/)\n( . .)\n( づ♡","%(b)\f[height,15]       /)    /)\n    ꒰ ˶• ༝ •˶꒱\n  ○( づ♡૮)","%(b)\f[height,15] ( \\ ( \\ \n ( 𐐃ᵕ𐐃)\nପ/つ🍮")
	
	if _ascii == "cat"; ANY(_cat)
	elseif _ascii == "skrunkly"; ANY(_skrunkly)
	elseif _ascii == "bunny"; ANY(_bunny)
	else; ANY(_cat,_skrunkly,_bunny)
}

creature : nonoverlap
{
	"mosquito"
	"highland cow"
	"puppy dog"
	"grown ass man"
}

beep : nonoverlap
{
	"beep beep"
	"meep meep"
	"skrt skrt"
	"boop boop"
	"toot toot"
	"choo choo"
	"ding ding"
	"ding dong"
	"cheep cheep"
	"tweet tweet"
	"brr brr"
	"ring ring"
	"doot doot"
	"peep peep"
	"yum yum"
	"yuck yuck"
	"zoom zoom"
	"woo woo"
	"doop doop"
	"grr grr"
	"splat splat"
	"borf borf"
	"bwoop bwoop"
	"boof boof"
	"bonk bonk"
	"bite bite"
	"bwob bwob"
	"wob wob"
	"nom nom"
	"bink bink"
}

meow : all
{
for _i = 1; _i < (RAND(100) + 1) ; _i++
{
     "meow"
}
}

doingthing : nonoverlap
{
	"overworking yourself"
	"overthinking"
	"looking at me"
	"listening"
	"holding that rat"
	"farting"
	"pooping"
	"screaming"
	"ignoring me"
	"accusing me of heinous crimes"
	"admiring me in all my beauty"
	"advising me against tax fraud"
	"broadcasting your childhood trauma"
	"bringing me into this"
}

that
{
	"burnt down a government building"
	"shit bricks at the thought of interacting with another human being"
	"gave up the opportunity to cure deadly diseases to become a youtuber"
	"is a horse"
	"puts barbeque sauce on perfectly fine chicken noodles"
	"enjoys watching paint dry"
	"has a bob and is very angry"
	"plays the ukelele but only knows the song 'riptide'"
	"hasnt cleaned their house since 1481"
	"lives in a society"
	"gets excited every time they see a puppy"
	"drums on their desk and pretends theyre in a band"
	"believes they are the mayor of idiotville"
	"cried for hours after losing progress in a game about an icecube"
	"hasn't left the house in months"
	"need therapy"
}

ext : nonoverlap
{
	"."
	--
	_ext = _argv[0]
	
    _img = ("png","jpg","jpeg","gif")
    _music = ("mp3","mp4","wav")
    _word = ("txt","pdf","docx")

    if _ext == "img"; ANY(_img)
    elseif _ext == "music"; ANY(_music)
    elseif _ext == "word"; ANY(_word)
    else; ANY(_img,_music,_word)
}

whywhen : nonoverlap
{
	"why"
	"when"
	"how"
	"what"
	"who"
	"where"
}

lyrics : nonoverlap
{
	"%(b_spike)LET OUR BODIES LAY,\nMARK OUR HEARTS WITH SHAME,\nLET OUR BLOOD IN VAIN,\nYOU FIND GOD IN PAIN" //The Foundations of Decay - MCR
	"%(b_spike)LET IT FLOOD\nLET IT FLOOD\nLET IT WASH AWAY" //The Foundations of Decay - MCR
	"%(b_spike)PO PI PO PI PO PO PI PO" //Po pi po - LamazeP (Hatsune Miku)
	"rolling around at the speed of sound,\ngot places to go,\ngotta %(b_spike)FOLLOW MY RAINBOW" //Escape from the City - Sonic
	"%(b_spike)YOURE LIVING A LIE,\w8\nSTRAIGHT TO HELL,\w8\nSTRAIGHT TO HELL" //IAGTKTPOTUSOA - Leathermouth
}

gender : nonoverlap
{
	"hatsune miku but trans"
	"like ditto, it can change into anything"
	"slime"
	"wolf but in a trans girl way"
	"sonic the hedgehog in a skirt"
	"%(b_spike)AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
	"shrek 2: the game, for the xbox"
	"the main theme of the legend of zelda: tears of the kingdom"
	"pixel art"
	"little meow meow"
	"an ominous empty forest full of fog"
	"every gender all at once, but also none at the same time"
	"a little silly, a little goofy even"
	"gerard way in the desolation row music video"
	"the music video for lovejoy's 'portrait of a blank slate'"
}

bodypart : nonoverlap
{
	_persons = persons
	
	"your"
	--
	" "
	--
	"%(_persons)"
	--
	if _persons == ""
	{
		""
	}
	else
	{
		" "
	}
	--
	"arm"
	"leg"
	"kidney"
	"lung"
	"knee"
	"elbow"
	"shin"
	"finger"
	"toe"
	"wrist"
	"eye"
	"ear"
	"eyebrow"
	"hand"
	--
	""
	"s"
}

bodypartss
{
	"a %(ANY('scoop,handful,bite,chunk')) of your thigh"
}

persons : nonoverlap
{
	""
	"friend's"
	"co-worker's"
	"cellmate's"
	"significant other's"
}

s_word : nonoverlap
{
	""
	"sickeningly ";"sadly ";"satisfyingly ";"secretly ";"seemingly "
	--
	"shit";"sadistic";"sexy";"sacred";"sacrilegious";"sad";"salted";"salty";"sappy";"sanitary";"sarcastic";"sassy";"saucy";"scaly";"scary"
	"scented";"screaming";"scrawny";"scraggly";"scribbled";"scruffy";"scrumptious";"seasick";"self-absorbed";"self-centered"
	"self-confident";"self-indulgent";"selfish";"sellable";"sensitive";"shabby";"shady";"shameless";"sharpened";"shiny";"short";"shy";"sick"
	"sinful";"skilled";"sleepy";"smart";"smelly";"smug";"sneaky";"satan"
}

randomnumbersdialogue
{
	_num1 = RAND(100)
	_num2 = 100 - _num1
	
	"%(_num1)% %(thing)\n\n[half]%(_num2)% %(thing)\n\n[half]100% skrunkly"
}

thing : nonoverlap
{
	"%(beep)";"%(creature)";"%(gender)";"%(whywhen)";"%(s_word)";"%(emoticon)";"%(item)";"%(itemss)"
	"pure";"evil";"water";"shittalking";"biting";"rabid";"ears";"money-back-guarantee"
}

twister : nonoverlap
{
	"left foot"
	"right foot"
	"left hand"
	"right hand"
	--
	" "
	--
	"red"
	"blue"
	"yellow"
	"green"
}

food : nonoverlap
{
	"%(flavour) chips"
	"%(flavour) chocolate"
	"%(flavour) jam"
	"%(flavour) jelly"
	"%(flavour) nintendo switch cartridges"
	"%(flavour) cake"
	"%(flavour) sauce"
	"eggs"
	"steak"
	"ashes"
	"pizza"
	"garlic bread"
	""
}

flavour
{
	"strawberry"
	"blueberry"
	"berry"
	"apple"
	"grease"
	"tomato"
	"fruity"
	"%(chocolatefl)"
	"salt"
	"birthday cake"
	"bee"
	"cheese"
	"pumpkin"
	"plastic"
	"bug"
	"webcam"
	"blood"
	"snot"
	if nsfw == 1; "cum"
	--
	" flavoured"
}

chocolatefl
{
	"chocolate"
	"white chocolate"
	"dark chocolate"
	"milk chocolate"
}

era
{
	"angry"
	"shitting"
	"angry shitting"
	"sharting"
	"crying myself to sleep"
	"monkey shit"
	"gas station food"
	"rat"
	"germ"
	"cheese"
	"villain"
	"cool guy being cool"
	"lizard"
	"gayass bitch"
	"fart"
	"hangry"
}

shoutout
{
	"autism"
	"the gays"
	"me for enduring this bullshit"
	"my mum"
}